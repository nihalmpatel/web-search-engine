WordPress Coding Standards – Make WordPress Core Have you taken the WordPress 2019 Survey yet? Skip to content WordPress.org Search WordPress.org for: Submit Toggle Menu Showcase Themes Plugins Mobile Support Documentation Forums Get Involved Five for the Future About Blog Hosting Get WordPress Menu Make WordPress Core Tickets Components Handbook Browse Source Trac Timeline Create a New Ticket Hide welcome box Welcome! The WordPress core development team builds WordPress! Follow this site for general updates, status reports, and the occasional code debate. There’s lots of ways to contribute: Found a bug? Create a ticket in our bug tracker. Want to contribute? Get started quickly with our tickets marked as good first bugs for new contributors or join a bug scrub. There’s more on our reports page, like patches needing testing. Other questions? We also have a detailed handbook for contributors, complete with tutorials. Communication We use Slack for real-time communication. Contributors live all over the world, so there are discussions happening at all hours of the day. Our core development meeting is every Wednesday at 20:00 UTC in the #core channel on Slack. Anyone can join and participate or listen in! Search Chapters About Project Organization Our Philosophies Communication How the Release Cycle Works Features as Plugins Version Numbering Updating Bundled Theme Versions Releasing Major Versions Releasing Minor Versions Releasing Beta Versions Licensing & Copyright Getting Started at a Contributor Day Contribute with Testing Automated Testing JavaScript: QUnit PHP: PHPUnit Writing PHP Tests Beta Testing User Testing Usability Reporting Bugs Reporting Security Vulnerabilities Bug Gardening Testing a Patch Write a Call for Testing Contribute with Code Code Refactoring PHP Compatibility and WordPress Versions The Code Repository (Git) The WordPress Codebase The Code Repository (SVN) Researching Code History The Bug Tracker (Trac) Trac Workflow Keywords Design Decisions Fixing Bugs Contribute with Docs Inline Docs JavaScript Docs Closed JS docs file tickets In-progress JS docs file tickets Unclaimed files Best Practices Post & Comment Guidelines Workflows & Tools WordPress Coding Standards PHP Coding Standards Accessibility Coding Standards CSS Coding Standards HTML Coding Standards JavaScript Coding Standards Inline Documentation Standards PHP Documentation Standards JavaScript Documentation Standards Browser support Core APIs Spelling Internationalization Writing Patches Commit Messages Backporting Commits When you become a committer Tutorials & Guides Getting Started Installing WordPress Locally Installing from a Zip File Installing via SVN Installing a Local Server Installing VVV Installing DesktopServer Installing MAMP Installing WampServer Installing XAMPP Installing a Version Control System Working with Patches Working with Trac New User Quick Start Guide Opening a Ticket Submitting a Patch Coordinating Devchat Credits Glossary Home / Handbook / Best Practices / WordPress Coding Standards WordPress Coding Standards Topics Why have coding standards? Language-specific Standards Accessibility Standards The purpose of the WordPress Coding Standards is to create a baseline for collaboration and review within various aspects of the WordPress open source project and community, from core code to themes to plugins. The WordPress community developed the standards contained in this section of the handbook, and those standards are part of the best practices that developers and core contributors are recommended to follow. Why have coding standards? #Why have coding standards? Coding standards help avoid common coding errors, improve the readability of code, and simplify modification. They ensure that files within the project appear as if they were created by a single person. Following the standards means anyone will be able to understand a section of code and modify it, if needed, without regard to when it was written or by whom. If you are planning to contribute to WordPress core, you need to familiarize yourself with these standards, as any code you submit will need to comply with them. Top ↑ Language-specific Standards #Language-specific Standards CSS Coding Standards HTML Coding Standards JavaScript Coding Standards PHP Coding Standards Top ↑ Accessibility Standards #Accessibility Standards WordPress is committed to meeting the Web Content Accessibility Guidelines (WCAG) at level AA for all new and updated code. We’ve provided a section with accessibility best practices you should be aware of when creating patches or feature plug-ins. Handbook navigation ← Workflows & Tools PHP Coding Standards → About Blog Hosting Donate Support Developers Get Involved Showcase Plugins Themes WordCamp WordPress.TV BuddyPress bbPress WordPress.com Matt Privacy Public Code @WordPress WordPress Code is Poetry. s search c compose new post r reply e edit t go to top j go to the next post or comment k go to the previous post or comment o toggle comment visibility esc cancel edit post or comment Please enable JavaScript to view this page properly. Skip to toolbar About WordPress About WordPress WordPress.org Documentation Support Feedback Search Log In Register Notifications